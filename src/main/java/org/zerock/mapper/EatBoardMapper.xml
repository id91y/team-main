<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.EatBoardMapper">

	<select id="getList" resultType="org.zerock.domain.EatBoardVO">
    
    <![CDATA[
    
	SELECT
		e.eatbno eatbno,
		e.title title,
		e.content content,
		e.address address,
		e.kategorie kategorie,
		e.writer writer,
		e.regdate regdate,
		e.updatedate updatedate,
		e.views views,
		f.fileName fileName,
		m.nickName writerName,
     --	count(r.eatrno) replyCnt,
     --	sum(l.eatlno) likesCnt
     
	-- count reply
       (SELECT COUNT(*) FROM eat_reply r WHERE r.eatbno = e.eatbno) replyCnt,
    
    -- sum likes
       (SELECT IFNULL(SUM(l.eatlno), 0) FROM eatlikes l WHERE l.eatbno = e.eatbno) likesCnt
     FROM eatBoard e 
                -- LEFT JOIN eat_reply r ON e.eatbno = r.eatbno
     				INNER JOIN tbl_member m ON e.writer = m.userid
     				LEFT JOIN eatBoard_file f ON e.eatbno = f.eatbno
     			--	LEFT JOIN eatlikes l ON e.eatbno = l.eatbno
	where e.eatbno > 0 order by e.eatbno DESC
     
    ]]>

	</select>

	<sql id="criteria">
		<where>
			<foreach item="type" separator="OR" collection="typeArr">
				<choose>
					<when test='type == "T"'>
						e.title LIKE CONCAT('%', #{keyword}, '%')
					</when>
					<when test='type == "W"'>
						m.nickName LIKE CONCAT('%', #{keyword}, '%')
					</when>
					<when test='type == "C"'>
						e.content LIKE CONCAT('%', #{keyword}, '%')
					</when>
					<when test='type == "A"'>
						e.address LIKE CONCAT('%', #{keyword}, '%')
					</when>
					<when test='type == "K"'>
						e.kategorie LIKE CONCAT('%', #{keyword}, '%')
					</when>
				</choose>
			</foreach>
		</where>
	</sql>
	

	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) FROM eatBoard e JOIN tbl_member m ON e.writer = m.userid
		<include refid="criteria"></include>
	</select>


<select id="getListWithPaging" resultType="org.zerock.domain.EatBoardVO">
    SELECT 
    	e.eatbno eatbno,
    	e.title title,
    	e.content content,
    	e.address address,
    	e.kategorie kategorie,
    	e.writer writer,
    	e.regdate regdate,
    	e.updatedate updatedate,
    	e.views views,
    	m.nickName writerName,
    	f.fileName fileName,
     --	count(r.eatrno) replyCnt,
     --	sum(l.eatlno) likesCnt
     
	-- count reply
       (SELECT COUNT(*) FROM eat_reply r WHERE r.eatbno = e.eatbno) replyCnt,
    
    -- sum likes
       (SELECT IFNULL(SUM(l.eatlno), 0) FROM eatlikes l WHERE l.eatbno = e.eatbno) likesCnt
     FROM eatBoard e 
                -- LEFT JOIN eat_reply r ON e.eatbno = r.eatbno
     				INNER JOIN tbl_member m ON e.writer = m.userid
     				LEFT JOIN eatBoard_file f ON e.eatbno = f.eatbno
     			--	LEFT JOIN eatlikes l ON e.eatbno = l.eatbno
     				
     				
     			
     
  <include refid="criteria"></include>
	 GROUP BY e.eatbno
     ORDER BY e.eatbno DESC
     LIMIT #{from}, #{amount}
   
     
  </select>
	
	<insert id="insert">
		INSERT INTO eatBoard (title, content, address, kategorie, writer, views)
		VALUES (#{title}, #{content}, #{address}, #{kategorie}, #{writer}, #{views})
	</insert>

	<insert id="insertSelectKey" useGeneratedKeys="true"
		keyProperty="eatbno" keyColumn="eatbno">
		INSERT INTO eatBoard (title, content, address, kategorie, writer, views)
		VALUES (#{title}, #{content}, #{address}, #{kategorie}, #{writer}, #{views})
		
	</insert>

	<select id="read" resultType="org.zerock.domain.EatBoardVO">
		SELECT
			e.eatbno eatbno,
			e.title title,
			e.content content,
			e.address address,
			e.kategorie kategorie,
			e.writer writer,
			e.regdate regdate,
			e.updatedate updatedate,
			e.views views,
			f.fileName fileName,
			m.nickName writerName,
	-- count reply
       (SELECT COUNT(*) FROM eat_reply r WHERE r.eatbno = e.eatbno) replyCnt,
    
    -- sum likes
       (SELECT IFNULL(SUM(l.eatlno), 0) FROM eatlikes l WHERE l.eatbno = e.eatbno) likesCnt
		FROM eatBoard e LEFT JOIN eatBoard_file f ON e.eatbno = f.eatbno
						 JOIN tbl_member m ON e.writer = m.userid
						 -- LEFT JOIN eat_reply r ON e.eatbno = r.eatbno
						 -- LEFT JOIN eatlikes l ON e.eatbno = l.eatbno
		WHERE e.eatbno = #{eatbno}
	</select>

	<delete id="delete">
		DELETE FROM eatBoard WHERE eatbno = #{eatbno}
	</delete>

	<update id="update">
		UPDATE eatBoard
		SET
		title = #{title},
		content = #{content},
		address = #{address},
		kategorie = #{kategorie},
		writer = #{writer},
		updatedate = NOW()

		WHERE
		eatbno = #{eatbno}

	</update>
	
	<delete id="removeByUserid">
	DELETE FROM eatBoard
	WHERE writer = #{userid}
	</delete>
	
	<update id="views">
		UPDATE
			eatBoard
		SET
			views = views +1
		WHERE
			eatbno = #{eatbno}
	</update>
	
</mapper>

















